#!/usr/bin/env bash
######################################################
# Name:             backup2tc
# Author:           Ludovic Delafontaine
# Creation:         18.10.2013
# Description:      Backup a source to a encrypted truecrypt container.
# Documentation:    https://github.com/ludelafo/backup2tc
######################################################
# In case of problems, stop the script
set -e
set -u

######################################################
# Consts - Change here if needed
######################################################
TRUECRYPT_CONTAINER="/media/ludelafo/SSD-64GB/Backup.tc"

MOUNT_POINT="/media/TrueCrypt" # Unix format
WINDOWS_MOUNT_POINT="Z:" # Windows's mount point's letter

FOLDERS_TO_INCLUDE="/usr/local/etc/include_to_backup.conf"
FOLDERS_TO_EXCLUDE="/usr/local/etc/exclude_from_backup.conf"
DESTINATION_FOLDER="Backups"

LINUX_TRUECRYPT_LOCATION="/usr/bin/truecrypt"
WINDOWS_TRUECRYPT_LOCATION="/cygdrive/c/Program\ Files/TrueCrypt/TrueCrypt.exe" # Cygwin format
MAC_TRUECRYPT_LOCATION="/Applications/TrueCrypt.app"

logFile=$(date +"%d-%m-%Y-%H%M.txt") # Name of the log file

######################################################
# Functions
######################################################
backup() {

    rsync \
        --files-from="$FOLDERS_TO_INCLUDE" \
        --exclude-from="$FOLDERS_TO_EXCLUDE" \
        --log-file="$logFile" \
        --archive \
        --recursive \
        --human-readable \
        --delete \
        --verbose \
        --modify-window=1 \
        / \
        "$destination"
}

exitBackup() {

    echo "Unmounting the TrueCrypt container..."

    sync # Write the modified blocs on the disk
    sleep 1 # Wait one sec to be sure

    eval "$unmountTc" # Unmount the encrypted file

    read -p "The backup is done ! Press <Enter> to exit."

}

######################################################
# Script
######################################################
trap exitBackup EXIT # In case of problems or if the script ends, lock the encrypted file and exit

destination="$MOUNT_POINT/$DESTINATION_FOLDER"
logFile="$destination/$logFile"

# Change the parameters if the OS is Windows or Unix based
if [[ "$OSTYPE" = 'linux-gnu' || "$OSTYPE" = 'darwin' ]]; then

    if [[ "$OSTYPE" = 'linux-gnu' ]]; then
        truecryptLocation="$LINUX_TRUECRYPT_LOCATION"
    elif [[ "$OSTYPE" = 'darwin' ]]; then
        truecryptLocation="$MAC_TRUECRYPT_LOCATION"
    fi

    mountTc="$truecryptLocation $TRUECRYPT_CONTAINER --mount $MOUNT_POINT"
    unmountTc="$truecryptLocation --dismount $MOUNT_POINT"
    mkdir --parent "$MOUNT_POINT"

elif [[ "$OSTYPE" = 'cygwin' ]]; then
    truecryptLocation="$WINDOWS_TRUECRYPT_LOCATION"
    mountTc="$truecryptLocation /volume \"$(cygpath -w $TRUECRYPT_CONTAINER)\" /letter $WINDOWS_MOUNT_POINT /quit"
    unmountTc="$truecryptLocation /dismount $WINDOWS_MOUNT_POINT /quit"
fi

eval "$mountTc"

read -p "Hit <Enter> when $TRUECRYPT_CONTAINER is mounted on $MOUNT_POINT..."

mkdir --parent "$destination" # Create the destination folder if doesn't exist

echo "Starting backup to $destination..."
backup
